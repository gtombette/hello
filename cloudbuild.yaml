steps:
  # Maven Test Version Command
  - name: 'maven'
    entrypoint: 'mvn'
    args: ['--version']
  # Maven Test Help Command
  - name: 'maven'
    entrypoint: 'mvn'
    args: ['--help']
  # Maven Packaging
  - name: 'maven'
    entrypoint: mvn
    args: [ 'package','-Dmaven.test.skip=true' ]
  # Docker Build
  - name: gcr.io/cloud-builders/docker
    args: [ 'build', '-t', 'us-central1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/hello-image', '--build-arg=JAR_FILE=target/hello-1.0.0.jar', '.' ]
  # Docker Push
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/hello-image' ]
  # Entrypoint, timeout and environment variables
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    timeout: 240s
    args: ['compute', 'instances',
           'create-with-container', 'my-vm-hello-rest',
           '--container-image',
           'us-central1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/hello-image:latest',
           '--tags',
           'rest-server']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    timeout: 240s
    args: ['compute', 'firewall-rules',
           'create', 'rest-allow-http',
           '--directions',
           'INGRESS',
           '--priority',
           '1000',
           '--network',
           'default',
           '--action',
           'ALLOW',
           '--rules',
           'tcp:80',
           '--source-ranges',
           '0.0.0.0/0',
           '--target-tags',
           'rest-server']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1'
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
images: [ 'us-central1-docker.pkg.dev/my-poc-project-450109/my-docker-repo/hello-image' ]
options:
  logging: CLOUD_LOGGING_ONLY